{% extends('base.html.twig') %}

{% block stylesheets %}
    {{ include('common.html.twig') }}
    <link rel="stylesheet" type="text/css" href="{{ asset('media/styles/header.css') }}">
{% endblock %}

{% block body %}
    {{ include('components/header.html.twig') }}
    <div hidden data-user-name="{{ app.user }}" id="auth"></div>
    <div class="content-container">
        <div class="flex-col centered top-margined">
            <div class="title-pic-sm">
                <img src="{{ asset('media/images/person_with_notebook.jpg') }}" class="pic-cover" alt="Register image">
            </div>
            <h1 class="title text-center">{{ article.title }}
                {% if app.user == article.authorId %}
                    <a href="{{ path('edit_article', {'id': article.id}) }}"><i class="fas fa-edit fa-xs"></i></a>
                    <i class="fas fa-trash-alt fa-xs" id="deleteArticleButton"></i>
                {% endif %}
            </h1>
            <label>
                <span><i class="far fa-calendar"></i> {{ article.writingTime | date('Y-m-d H:i') }}</span>
                <span><i class="fas fa-eye"></i> {{ article.viewsCount }}</span>
                <!--span><i class="fas fa-user-tie"></i> {.{ article.username }}</span>
                <span><i class="fas fa-user-tie"></i>{.{ article.author }}</span-->
                <div class="tags-container">
                    {% for tag in article.tags %}
                        <span class="tag">{{ tag.tagTitle }}</span>
                    {% endfor %}
                </div>
            </label>
        </div>
        <div>
            <h6 class="description">{{ article.description }}</h6>
        </div>
        <div>
            <p>{{ article.content }}</p>
        </div>
        <div class="flex centered">
            <h4>Comments:</h4>
        </div>
        <div class="flex-row bottom-margined30 bottom-margined30">
            <button id="addComment" class="btn btn-primary add-comment-btn">Add comment</button>
        </div>
        <div class="comment-box" id="addCommentBox">
            <div class="input-group">
                <textarea class="form-control commentInputArea"></textarea>
            </div>
            <button type="button" class="btn btn-primary" id="submitComment">Send</button>
        </div>
        <div id="comments"></div>
        <button type="button" id="loadMoreButton" class="btn btn-primary">Load more</button>
    </div>
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modalContent"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                    <button type="button" class="btn btn-primary" id="submitAction">Yes</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script>
        $(document).ready(function () {
            getCommentsList(10);
        });

        let auth = $('#auth').attr('data-user-name');

        if (auth)
        {
            $('#addComment').click(function () {
                $('#addCommentBox').toggle('slow');
            })
        }
        else {
            $('#addComment').remove();
        }

        $('#deleteArticleButton').click(function () {
            $('#modalContent')
                .html($('<p>').text('Submit deleting of article? This action can not be undone!'));
            $('.modal').modal('show');
            $('#submitAction').off('click').click(function () {
                $.ajax({
                    type: 'POST',
                    url: '{{ path('delete_article', {'id': article.id }) }}',
                    data: {},
                    success: function (rawData) {
                        let data = JSON.parse(rawData);
                        if (data.deleted)
                        {
                            window.location.replace('{{ path('feed_page') }}');
                        }
                        else {
                            console.log(data.error);
                        }
                    },
                    error: function (rawData) {
                        let data = JSON.parse(rawData);
                        console.log(data.error);
                    }
                })
            })
        });

        let loaded = 0;
        let assetPath = '/www/public/App/media/default/';

        function getCommentsList(loadChunkCount)
        {
            $.ajax({
                type: 'POST',
                url: '{{ path('comment_list', {'id': article.id }) }}',
                data: {
                    'count' : loadChunkCount,
                    'offset' : loaded,
                    'sort': '1'
                },
                success: function (rawData) {
                    let data = JSON.parse(rawData);
                    let count = data['count'];
                    loaded += count;
                    let commentContainer = $('#comments');

                    if (loaded === 0)
                    {
                        commentContainer.empty();
                        $('#loadMoreButton').css('display', 'none');
                        $('<h4>').append('No comments yet').appendTo(commentContainer);
                        return;
                    }

                    if (count < loadChunkCount)
                    {
                        $('#loadMoreButton').css('display', 'none');
                    }

                    let content = data['comments'];
                    for (let i in content)
                    {
                        let item = content[i];
                        let comment = $('<div></div>', {'class': 'comment-box'});

                        if (auth == item.userId)
                        {
                            let buttonTopRow = $('<div>', {'class': 'buttons-top-row'});
                            let editLink = $('<i></i>', {'class': 'editComment fas fa-edit'});
                            editLink.click(function () {
                                editComment(comment, item.id);
                            })
                            editLink.appendTo(buttonTopRow);
                            let deleteLink = $('<i></i>', {'class': 'deleteComment fas fa-times'});
                            deleteLink.click(function () {
                                deleteComment(comment, item.id);
                            })
                            deleteLink.appendTo(buttonTopRow);
                            buttonTopRow.appendTo(comment);
                        }

                        let userPic = $('<div>', {'class': 'flex-col'}).append($('<img>', {'src': assetPath + item.userPic, 'class': ''}));

                        let mainCol = $('<div>', {'class': 'flex-col'});
                        let authorData = $('<p>', {'class': 'comment-metadata'});
                        $('<span></span>', {'class': 'authorNickname'})
                            .append('<i class="fas fa-user"></i> ')
                            .append(item.username)
                            .appendTo(authorData);
                        $('<span></span>', {'class': 'addedTime'})
                            .append('<i class="far fa-calendar"></i> ')
                            .append(item.addedTime.date)
                            .appendTo(authorData);
                        authorData.appendTo(mainCol);

                        $('<p></p>', {'class': 'commentText'}).append(item.content).appendTo(mainCol);

                        $('<div>', {'class': 'flex-row'}).append(userPic).append(mainCol).appendTo(comment);
                        commentContainer.append(comment);
                    }
                },
                error: function (rawData) {
                    $('#comments').append('Sorry:( Error occured when downloading content');
                    console.log('Error occured');
                }
            })
        }

        function deleteComment(element, id)
        {
            $.ajax({
                type: 'POST',
                url: '{{ path('delete_comment') }}',
                data: {
                    'id': id
                },
                success: function (rawData) {
                    let data = JSON.parse(rawData);
                    if (data.deleted === true) {
                        element.remove();
                    }
                },
                error: function (rawData) {
                    let data = JSON.parse(rawData);
                    console.log(data.error)
                }
            })
        }

        function editComment(element, id) {
            let prevText = element.find('.commentText').text();

            let form = $('<form></form>');
            $('<textarea></textarea>', {'id': 'commentArea', 'class': 'form-control'}).val(prevText).appendTo(form);
            let submitButton = $('<button></button>', {'type': 'button', 'class': 'btn btn-primary'}).append('Confirm').appendTo(form);
            let cancelButton = $('<button></button>', {'type': 'button', 'class': 'btn btn-primary'}).append('Cancel').appendTo(form);
            let container = $('<div></div>', {'class': 'comment-box input-group'}).append(form);

            element.css('display', 'none');
            container.insertAfter(element);

            cancelButton.click(function () {
                container.remove();
                element.css('display', 'block');
            });

            submitButton.click(function () {
                let text = $('#commentArea').val();
                $.ajax({
                    type: 'POST',
                    url: '{{ path('edit_comment') }}',
                    data: {
                        'id': id,
                        'content': text
                    },
                    success: function (rawData) {
                        let data = JSON.parse(rawData);
                        if (data.edited === true) {
                            element.find('.commentText').text(text);
                            element.find('.addedTime').text(Date.now().toString());
                            element.css('display', 'block');
                            container.remove();
                        }
                    },
                    error: function (rawData) {
                        let data = JSON.parse(rawData);
                        console.log(data.error)
                    }
                })
            });
        }

        $('#submitComment').click(function () {
            $.ajax({
                type: 'POST',
                url: '{{ path('add_comment', { 'id': article.id }) }}',
                data: {
                    'content': $('.commentInputArea').val()
                },
                success: function (rawData) {
                    let data = JSON.parse(rawData);
                    if (data.added === true) {
                        loaded = 0;
                        $('#addCommentBox').hide();
                        $('#comments').empty();
                        getCommentsList(10);
                    }
                },
                error: function (rawData) {
                    let data = JSON.parse(rawData);
                    console.log(data.error)
                }
            })
        });

        $('#loadMoreButton').click(function () {
            getCommentsList(10);
        });
    </script>
{% endblock %}
